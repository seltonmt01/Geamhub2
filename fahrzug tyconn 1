local SecurelIllIil11ill1iIiIliIi = assert local SecurelIillI1iIiIili1i1li = select local SecurelIlIlIIiIiIlli111lI1I = tonumber local Secureili111ilill1lIIIiii = unpack local Securelll1lllllIIi1l1Iil1 = pcall local SecureIl1i1i11I1i11lIIlii = setfenv local SecureiiilI11iiliI111II11 = setmetatable local Securel1IiIlli1i1I1ii11l1 = type local SecurelilIllll1I11llIiiIl = getfenv local Securei1ll11lI1IIiiIllill = tostring local SecureIilIlI111il1ll1llIl = error local SecurelI11i11liiiiiil1iIi = string.sub local SecurelIlIliiII1liIIi1lIlli = string.byte local SecurelIl1I1i1i1IIlIilI11iI = string.char local SecureiilllIIlilIIl1llii1 = string.rep local SecurelIl1IlilI1lI1I1I1liIl = string.gsub local SecureiIIlIl1Il1I1II1lIlI = string.match local SecurelllllI1iillliiIlllI = #{4744} local SecurelIII11liI1iiii1iiII = {} local Securel1iiI1Il1ilIl111il1 = 1 local function SecureiI11I1i1iIi1lI1lilI(SecurelIlii1IiliiiI1II1ili1, SecureI1llli1lIlIllIiliIi) local Secureiili1lIliI1liillili SecurelIlii1IiliiiI1II1ili1 = SecurelIl1IlilI1lI1I1I1liIl(SecurelI11i11liiiiiil1iIi(SecurelIlii1IiliiiI1II1ili1, 5), "..", function(Securel1iliI1IIl11lI1Ii1l) if SecurelIlIliiII1liIIi1lIlli(Securel1iliI1IIl11lI1Ii1l, 2) == 71 then Secureiili1lIliI1liillili = SecurelIlIlIIiIiIlli111lI1I(SecurelI11i11liiiiiil1iIi(Securel1iliI1IIl11lI1Ii1l, 1, 1)) return "" else local SecureIl1Ii1i1IIii111iI1I = SecurelIl1I1i1i1IIlIilI11iI(SecurelIlIlIIiIiIlli111lI1I(Securel1iliI1IIl11lI1Ii1l, 16)) if Secureiili1lIliI1liillili then local SecureliIiil11Il1IllIi1ll = SecureiilllIIlilIIl1llii1(SecureIl1Ii1i1IIii111iI1I, Secureiili1lIliI1liillili) Secureiili1lIliI1liillili = nil return SecureliIiil11Il1IllIi1ll else return SecureIl1Ii1i1IIii111iI1I end end end) local function Securei1I111lli1IIII1IilI() local SecureIll1ii1lIlilii1Il1i = SecurelIlIliiII1liIIi1lIlli(SecurelIlii1IiliiiI1II1ili1, Securel1iiI1Il1ilIl111il1, Securel1iiI1Il1ilIl111il1) Securel1iiI1Il1ilIl111il1 = Securel1iiI1Il1ilIl111il1 + 1 return SecureIll1ii1lIlilii1Il1i end local function Securei1llIiIliliI1il1lI1() local SecureIll1ii1lIlilii1Il1i, SecureIl1Ii1i1IIii111iI1I, SecureliIiil11Il1IllIi1ll, SecureiIiiliIl1llI1iIl111 = SecurelIlIliiII1liIIi1lIlli(SecurelIlii1IiliiiI1II1ili1, Securel1iiI1Il1ilIl111il1, Securel1iiI1Il1ilIl111il1 + 3) Securel1iiI1Il1ilIl111il1 = Securel1iiI1Il1ilIl111il1 + 4 return SecureiIiiliIl1llI1iIl111 * 16777216 + SecureliIiil11Il1IllIi1ll * 65536 + SecureIl1Ii1i1IIii111iI1I * 256 + SecureIll1ii1lIlilii1Il1i end local function SecureIiIllIli1il1il1Iiii(Securel1II1Il1l1l111IIlIl, Securel1liIiI1lII1iiIIill, SecureIiIl1Ii11l1liIlll1I) if SecureIiIl1Ii11l1liIlll1I then local SecureIili1IiI11II1Iili11, Secureil1l1ll1II1iilIlil1 = 0, 0 for SecureIIiliI1liiIllIlll11 = Securel1liIiI1lII1iiIIill, SecureIiIl1Ii11l1liIlll1I do SecureIili1IiI11II1Iili11 = SecureIili1IiI11II1Iili11 + 2 ^ Secureil1l1ll1II1iilIlil1 * SecureIiIllIli1il1il1Iiii(Securel1II1Il1l1l111IIlIl, SecureIIiliI1liiIllIlll11) Secureil1l1ll1II1iilIlil1 = Secureil1l1ll1II1iilIlil1 + 1 end return SecureIili1IiI11II1Iili11 else local Securell1111Illi1illlI1Ii = 2 ^ (Securel1liIiI1lII1iiIIill - 1) return Securell1111Illi1illlI1Ii <= Securel1II1Il1l1l111IIlIl % (Securell1111Illi1illlI1Ii + Securell1111Illi1illlI1Ii) and 1 or 0 end end local function SecureI1lliI11ii1I1i1lIii() local SecureIll1ii1lIlilii1Il1i, SecureIl1Ii1i1IIii111iI1I = Securei1llIiIliliI1il1lI1(), Securei1llIiIliliI1il1lI1() if SecureIll1ii1lIlilii1Il1i == 0 and SecureIl1Ii1i1IIii111iI1I == 0 then return 0 end return (-2 * SecureIiIllIli1il1il1Iiii(SecureIl1Ii1i1IIii111iI1I, 32) + 1) * 2 ^ (SecureIiIllIli1il1il1Iiii(SecureIl1Ii1i1IIii111iI1I, 21, 31) - 1023) * ((SecureIiIllIli1il1il1Iiii(SecureIl1Ii1i1IIii111iI1I, 1, 20) * 4294967296 + SecureIll1ii1lIlilii1Il1i) / 4503599627370496 + 1) end local function SecurelIl11lIIiIll1Ililiiii(SecurelIli1l1liIl1iIiiIii1I) local SecureilIIiiIl1ilIiiiiIIl = { SecurelIlIliiII1liIIi1lIlli(SecurelIlii1IiliiiI1II1ili1, Securel1iiI1Il1ilIl111il1, Securel1iiI1Il1ilIl111il1 + 3) } Securel1iiI1Il1ilIl111il1 = Securel1iiI1Il1ilIl111il1 + 4 local Securell1IIIlIillIllllilI = { nil, nil, nil, nil, nil, nil, nil, nil } for SecureIIiliI1liiIllIlll11 = 1, 8 do Securell1IIIlIillIllllilI[SecureIIiliI1liiIllIlll11] = SecureIiIllIli1il1il1Iiii(SecurelIli1l1liIl1iIiiIii1I, SecureIIiliI1liiIllIlll11) end local SecureIl1i1liII1lIIIII1II = "" for SecureIIiliI1liiIllIlll11 = 1, 4 do local SecureIili1IiI11II1Iili11, Secureil1l1ll1II1iilIlil1 = 0, 0 for SecurelIll1li1liI1i1l1lIll1 = 1, 8 do local SecureI1lIIIlIIiiIlIllil1 = SecureIiIllIli1il1il1Iiii(SecureilIIiiIl1ilIiiiiIIl[SecureIIiliI1liiIllIlll11], SecurelIll1li1liI1i1l1lIll1) if Securell1IIIlIillIllllilI[SecurelIll1li1liI1i1l1lIll1] == 1 then SecureI1lIIIlIIiiIlIllil1 = SecureI1lIIIlIIiiIlIllil1 == 1 and 0 or 1 end SecureIili1IiI11II1Iili11 = SecureIili1IiI11II1Iili11 + 2 ^ Secureil1l1ll1II1iilIlil1 * SecureI1lIIIlIIiiIlIllil1 Secureil1l1ll1II1iilIlil1 = Secureil1l1ll1II1iilIlil1 + 1 end SecureIl1i1liII1lIIIII1II = SecureIl1i1liII1lIIIII1II .. SecureIl1i1liII1lIIIII1II.char(SecureIili1IiI11II1Iili11) end local SecureIll1ii1lIlilii1Il1i, SecureIl1Ii1i1IIii111iI1I, SecureliIiil11Il1IllIi1ll, SecureiIiiliIl1llI1iIl111 = SecurelIlIliiII1liIIi1lIlli(SecureIl1i1liII1lIIIII1II, 1, 4) return SecureiIiiliIl1llI1iIl111 * 16777216 + SecureliIiil11Il1IllIi1ll * 65536 + SecureIl1Ii1i1IIii111iI1I * 256 + SecureIll1ii1lIlilii1Il1i end local function Securei1I1llIliIIlllIIl1i(SecurelIli1l1liIl1iIiiIii1I) local SecureIiIIlilIl11Il11illI = Securei1llIiIliliI1il1lI1() Securel1iiI1Il1ilIl111il1 = Securel1iiI1Il1ilIl111il1 + SecureIiIIlilIl11Il11illI local Securell1IIIlIillIllllilI = { nil, nil, nil, nil, nil, nil, nil, nil } for SecureIIiliI1liiIllIlll11 = 1, 8 do Securell1IIIlIillIllllilI[SecureIIiliI1liiIllIlll11] = SecureIiIllIli1il1il1Iiii(SecurelIli1l1liIl1iIiiIii1I, SecureIIiliI1liiIllIlll11) end local SecureIl1i1liII1lIIIII1II = "" for SecureIIiliI1liiIllIlll11 = 1, SecureIiIIlilIl11Il11illI do local SecureIili1IiI11II1Iili11, Secureil1l1ll1II1iilIlil1 = 0, 0 for SecurelIll1li1liI1i1l1lIll1 = 1, 8 do local SecureI1lIIIlIIiiIlIllil1 = SecureIiIllIli1il1il1Iiii(SecurelIlIliiII1liIIi1lIlli(SecurelIlii1IiliiiI1II1ili1, Securel1iiI1Il1ilIl111il1 - SecureIiIIlilIl11Il11illI + SecureIIiliI1liiIllIlll11 - 1), SecurelIll1li1liI1i1l1lIll1) if Securell1IIIlIillIllllilI[SecurelIll1li1liI1i1l1lIll1] == 1 then SecureI1lIIIlIIiiIlIllil1 = SecureI1lIIIlIIiiIlIllil1 == 1 and 0 or 1 end SecureIili1IiI11II1Iili11 = SecureIili1IiI11II1Iili11 + 2 ^ Secureil1l1ll1II1iilIlil1 * SecureI1lIIIlIIiiIlIllil1 Secureil1l1ll1II1iilIlil1 = Secureil1l1ll1II1iilIlil1 + 1 end SecureIl1i1liII1lIIIII1II = SecureIl1i1liII1lIIIII1II .. SecureIl1i1liII1lIIIII1II.char(SecureIili1IiI11II1Iili11) end return SecureIl1i1liII1lIIIII1II end local SecureIIliIllIilIiIlIIi1I = Securei1I111lli1IIII1IilI() local SecurelIlIll1Ii11iIl1i1l11i = Securei1I111lli1IIII1IilI() local function Securei1i111Iilii1l1lI1l1() local SecureiIIIIl1I1i1IlilI1l1 = { [44034] = {}, [19721] = {}, [35707] = {}, [123206] = {} } local SecureIii11lII1IiiIiIllI1 = Securei1llIiIliliI1il1lI1() for SecureIIiliI1liiIllIlll11 = SecurelllllI1iillliiIlllI, SecureIii11lII1IiiIiIllI1 do SecureiIIIIl1I1i1IlilI1l1[35707][SecureIIiliI1liiIllIlll11] = Securei1llIiIliliI1il1lI1() end SecureiIIIIl1I1i1IlilI1l1[73944] = Securei1I111lli1IIII1IilI() SecureiIIIIl1I1i1IlilI1l1[116921] = Securei1I111lli1IIII1IilI() local SecureIii11lII1IiiIiIllI1 = Securei1llIiIliliI1il1lI1() - (#{ 5050, 3372, 3090, 1229, 5545, 5383, 2201, 2951, 2284, 2550, 6202, 4746, 2740, 4374, 4551, 1671, 1522, 4838, 366, 206 } + 133688) for SecureIIiliI1liiIllIlll11 = SecurelllllI1iillliiIlllI, SecureIii11lII1IiiIiIllI1 do local SecureI1i11iiI1i1iillI1l1 = {} local Securei1liiillili1iIII1I1 = SecurelIl11lIIiIll1Ililiiii(SecurelIlIll1Ii11iIl1i1l11i) SecureI1i11iiI1i1iillI1l1[123416] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{ 1842, 695, 4342, 3529, 3756, 4408, 5820, 1183, 6838, 3724, 116, 998, 5029, 4161, 1974, 6780, 3980, 5360, 4264 }, #{ 1525, 2335, 4026, 405, 5861, 3588, 2820, 1475, 2027, 391, 4578, 4748, 6095, 4622, 4478, 6108, 1962, 3591, 6553, 2545, 447, 415, 6694 } + 3) SecureI1i11iiI1i1iillI1l1[124901] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{1763}, #{ 6019, 270, 464, 1179, 2118, 6615, 5556, 2272, 1270, 1316, 3586, 983, 4973, 5399, 189, 2198, 1395, 5356 }) SecureI1i11iiI1i1iillI1l1[32690] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{ 3264, 2061, 3619, 2375, 5499, 5794, 6343, 4441, 1688, 491, 4377, 6439, 3283, 4690, 6502, 4022, 869, 1614, 3852, 6841 } + 7, #{ 4082, 5930, 2756, 4767, 817, 3046, 3086, 5324, 6316, 1041, 3477, 511, 4309, 3548, 1733, 5146, 1730, 6940, 5971, 6260, 5110, 1479 } + 10) SecureI1i11iiI1i1iillI1l1[7942] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{5862}, #{ 3013, 1898, 2250, 359, 853, 2745, 4652, 3911, 2966 }) SecureI1i11iiI1i1iillI1l1[98084] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{ 3266, 5501, 4933, 5562, 4292, 1908, 4327, 542, 1832, 3999 }, #{ 684, 46, 2369, 522, 2149, 152, 6462, 3281, 4470, 3499, 4861, 5141, 3866, 5283, 6123, 5997, 5035, 6105 }) SecureI1i11iiI1i1iillI1l1[8412] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{ 3440, 682, 4380, 85, 773, 3987, 2033, 4377, 1839, 4445 }, #{ 6063, 804, 2376, 3501, 3312, 1663, 6125, 3643, 6842, 2187, 5403, 557, 5959, 3964, 3580, 1360, 4301, 510 }) SecureI1i11iiI1i1iillI1l1[44602] = SecureIiIllIli1il1il1Iiii(Securei1liiillili1iIII1I1, #{2813}, #{ 6540, 1614, 3752, 859, 4418, 6878, 3772, 1650, 3107 }) SecureiIIIIl1I1i1IlilI1l1[19721][SecureIIiliI1liiIllIlll11] = SecureI1i11iiI1i1iillI1l1 end local SecureIii11lII1IiiIiIllI1 = Securei1llIiIliliI1il1lI1() for SecureIIiliI1liiIllIlll11 = SecurelllllI1iillliiIlllI, SecureIii11lII1IiiIiIllI1 do SecureiIIIIl1I1i1IlilI1l1[44034][SecureIIiliI1liiIllIlll11 - SecurelllllI1iillliiIlllI] = Securei1i111Iilii1l1lI1l1() end Securei1I111lli1IIII1IilI() SecureiIIIIl1I1i1IlilI1l1[89147] = Securei1I111lli1IIII1IilI() Securei1llIiIliliI1il1lI1() local SecureIii11lII1IiiIiIllI1 = Securei1llIiIliliI1il1lI1() - (#{ 4784, 5132, 6142, 6391, 2007, 3650, 242, 2802, 1707, 6243, 672, 2558, 2341, 5599, 4529, 586, 4377, 4589, 5919, 840, 3583, 2189 } + 133758) for SecureIIiliI1liiIllIlll11 = SecurelllllI1iillliiIlllI, SecureIii11lII1IiiIiIllI1 do local SecurelIl11l1i1iI1liiilIi1l = {} local Securel1IiIlli1i1I1ii11l1 = Securei1I111lli1IIII1IilI() if Securel1IiIlli1i1I1ii11l1 == #{ 426, 6776, 2780, 5552, 4944, 5688, 2033, 6028, 4180, 3397, 4464, 4268, 3202, 1164, 4687, 556, 280, 926, 3856, 4822, 4293 } + 70 then SecurelIl11l1i1iI1liiilIi1l[90607] = Securei1llIiIliliI1il1lI1() end if Securel1IiIlli1i1I1ii11l1 == #{ 3034, 4871, 5628, 4554, 4955, 1550, 5106, 4845, 4249, 5564, 3998, 5566, 836, 2592, 4409, 642, 2175, 846, 1303, 2855, 3963 } + 135 then SecurelIl11l1i1iI1liiilIi1l[90607] = Securei1I1llIliIIlllIIl1i(SecureIIliIllIilIiIlIIi1I) end if Securel1IiIlli1i1I1ii11l1 == #{ 4169, 4887, 6246, 821, 3765, 4285, 5761, 5098, 6123, 4719, 5664, 2896, 4473, 438, 5159, 5529, 3891, 5013, 5489, 338, 6627, 214, 1921 } + 91 then SecurelIl11l1i1iI1liiilIi1l[90607] = #{ 4778, 5592, 2979, 445, 6722, 85, 2450, 4460, 142, 1626, 1264, 5586, 1835, 520, 6249, 914, 3237, 2355, 129, 824, 5190, 6183 } + 128945 == #{ 4778, 5592, 2979, 445, 6722, 85, 2450, 4460, 142, 1626, 1264, 5586, 1835, 520, 6249, 914, 3237, 2355, 129, 824, 5190, 6183 } + 128945 end if Securel1IiIlli1i1I1ii11l1 == #{ 4383, 3994, 3882, 4661, 822, 6093, 1868, 3275, 1948, 3600, 6637, 4132, 4304, 2402, 4971, 4795, 1397, 2690, 6827, 6913 } + 25 then SecurelIl11l1i1iI1liiilIi1l[90607] = Securei1I111lli1IIII1IilI() end if Securel1IiIlli1i1I1ii11l1 == #{ 800, 4042, 3929, 2191, 1720, 5473, 5464, 6612, 1585, 4354, 2412, 1337, 1514, 2319, 3936, 2634, 5434, 5704, 5065, 3857, 255, 1816, 2826, 131 } + 11 then SecurelIl11l1i1iI1liiilIi1l[90607] = SecureI1lliI11ii1I1i1lIii() end if Securel1IiIlli1i1I1ii11l1 == #{ 2696, 6690, 3794, 5074, 2141, 3153, 3036, 959, 809, 5557, 257, 6726, 4846, 1299, 78, 811, 501, 3671, 6496, 480, 1078, 2611 } + 229 then SecurelIl11l1i1iI1liiilIi1l[90607] = Securei1I1llIliIIlllIIl1i(SecureIIliIllIilIiIlIIi1I) end if Securel1IiIlli1i1I1ii11l1 == #{ 4703, 5184, 4471, 1068, 715, 5087, 136, 6865, 3977, 5499, 4378, 2986, 5388, 463, 1489, 80, 1554, 4690, 2813, 3185, 4489 } + 50 then SecurelIl11l1i1iI1liiilIi1l[90607] = Securei1I1llIliIIlllIIl1i(SecureIIliIllIilIiIlIIi1I) end if Securel1IiIlli1i1I1ii11l1 == #{ 5341, 3748, 5655, 2663, 5123, 5295, 579, 1948, 6232, 1536, 2647, 3644, 6797, 1748, 4264, 1134, 5511, 6093, 4697, 650 } + 158 then SecurelIl11l1i1iI1liiilIi1l[90607] = #{ 5440, 1960, 4516, 4009, 3301, 2024, 5049, 1413, 593, 6058, 2553, 4158, 1366, 3406, 5545, 2059, 2338, 2530, 6476, 3941, 6547 } + 39900 == #{ 4522, 6918, 6628, 4623, 5775, 615, 3383, 5359, 3796, 6489, 2915, 935, 4134, 933, 5874, 2342, 1868, 5587, 5831, 2825 } + 89059 end if Securel1IiIlli1i1I1ii11l1 == #{ 5234, 4336, 1709, 6139, 3612, 1545, 3639, 3444, 610, 117, 3498, 5418, 3080, 6623, 3804, 6120, 2343, 3303, 4728, 5932 } + 169 then SecurelIl11l1i1iI1liiilIi1l[90607] = Securei1I1llIliIIlllIIl1i(#{ 6251, 824, 4080, 1586, 510, 5162, 6472, 5596, 3000, 5809, 6739, 2946, 6926, 2574, 3192, 3952, 4796, 935, 4282, 498, 5537, 816 } + 98) end SecureiIIIIl1I1i1IlilI1l1[123206][SecureIIiliI1liiIllIlll11 - SecurelllllI1iillliiIlllI] = SecurelIl11l1i1iI1liiilIi1l end return SecureiIIIIl1I1i1IlilI1l1 end local function SecureiII1li1ilillliiIIlI(SecureiIIIIl1I1i1IlilI1l1, SecureI1llli1lIlIllIiliIi, Securelli1lii1iIIIIIIIi11) local SecureIi11iiiiiil1i1I11iI, SecureI1i1IIli1IlIiIliliI = 23, 16 local SecurelililiIillli1III1Il = SecureiIIIIl1I1i1IlilI1l1[19721] local SecurelIll1IIli1Ii1llIii1ii = SecureiiilI11iiliI111II11({}, { __index = function(SecureIliIlIi1illlIIIllII, Securei1l1IlI1IiliilI1Ill) local SecureIl1i1liII1lIIIII1II = SecureiIIIIl1I1i1IlilI1l1[123206][Securei1l1IlI1IiliilI1Ill] if SecurelI11i11liiiiiil1iIi(Securel1IiIlli1i1I1ii11l1(SecureIl1i1liII1lIIIII1II[90607]), 1, 1) == "s" then return { [90607] = SecurelI11i11liiiiiil1iIi(SecureIl1i1liII1lIIIII1II[90607], 3) } end return SecureIl1i1liII1lIIIII1II end }) local SecurelIlI11IIIl1iIi1Iiiill = 116921 local SecureIIiIiIiIili1iili1II = SecureiIIIIl1I1i1IlilI1l1[44034] local SecurelIlIIIllIIllI1Il1l1ii = 90607 local SecureilIl1I11III111IIiIi = SecureiIIIIl1I1i1IlilI1l1[89147] local SecurelIliIl1i1iiIiliIl1IIl = 32690 local SecurelliI1ii11l111Il1li1 = SecureiIIIIl1I1i1IlilI1l1[35707] local SecureI1III1lil1i1llIi1i1 = 7942 local function SecurelIl1I1i1lIlIlil1ll1II(...) local SecurelIliiiI1iII1l1lIiiliI = 0 local SecurelIlIIliilli1IlIll1lll = { Secureili111ilill1lIIIiii({}, 1, SecureiIIIIl1I1i1IlilI1l1[73944]) } local SecureIliI1IllIIIllIlIIIi = 1 local SecureI1iiIIiillII111Iiii = {} local SecurelIlIlIl1lIiII1lIlIilI = {} local SecurelIll1liI11iIliil1Ii1i = 1 local SecureI1llli1lIlIllIiliIi = SecurelilIllll1I11llIiiIl() local Securei1IiilIIll1111IIi1i = { ... } local Secureli1liI11llIII1iIi1i = #Securei1IiilIIll1111IIi1i - 1 for SecureIIiliI1liiIllIlll11 = 0, Secureli1liI11llIII1iIi1i do if SecureIIiliI1liiIllIlll11 < SecureilIl1I11III111IIiIi then SecurelIlIIliilli1IlIll1lll[SecureIIiliI1liiIllIlll11] = Securei1IiilIIll1111IIi1i[SecureIIiliI1liiIllIlll11 + 1] end end local function SecurelIlillllI1ili1lliliiI(...) local SecureliIiil11Il1IllIi1ll = SecurelIillI1iIiIili1i1li("#", ...) local SecureIliIlIi1illlIIIllII = { ... } return SecureliIiil11Il1IllIi1ll, SecureIliIlIi1illlIIIllII end local SecurelIliliIiilIl1llllli = #{ 5583, 5279, 6539, 5066, 3887, 2552, 1690, 5850, 2710, 3066, 1968, 4474, 1575, 4615, 6511, 5854, 6920, 3528, 5226, 3913 } + 131051 local SecurelIli11Iilll1iIIi1111I local Securel1IilI1l1iIlIlll1il = { nil, function(SecurelIlillili1I11iIililI1) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] if SecurelIl1llIiilIII11i1li1I == 155 then return SecurelIli11Iilll1iIIi1111I[7]({ [123416] = (SecurelIil1iIi1i1il11l111 - 182) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 182) % 256, [124901] = 0 }) end if SecurelIl1llIiilIII11i1li1I == 185 then return SecurelIli11Iilll1iIIi1111I[32]({ [123416] = (SecurelIil1iIi1i1il11l111 - 56) % 256, [98084] = (Securel1ll1I1iI11I11Illl1 - 56) % 256, [124901] = 0 }) end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end, nil, nil, nil, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = -SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end, nil, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1][SecurelIl1llIiilIII11i1li1I] end, nil, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 ~= 0 if SecurelIl1llIiilIII11i1li1I ~= 0 then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end end, function(SecurelIlillili1I11iIililI1) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 * SecurelIl1llIiilIII11i1li1I end, function(SecurelIlillili1I11iIililI1) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 % SecurelIl1llIiilIII11i1li1I end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securelli1lii1iIIIIIIIi11[Securel1ll1I1iI11I11Illl1] end, nil, nil, nil, nil, nil, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIll1IIli1Ii1llIii1ii[SecureIIli1ill11IlIliIlIl][SecurelIlIIIllIIllI1Il1l1ii] end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIlil1ii1l1Il1I1111Ii, SecurelIlIlili11I11i1IlllII, SecureIIIllIll1II1lIllli1 if Securel1ll1I1iI11I11Illl1 ~= 1 then if Securel1ll1I1iI11I11Illl1 ~= 0 then SecurelIlIlili11I11i1IlllII = SecurelIil1iIi1i1il11l111 + Securel1ll1I1iI11I11Illl1 - 1 else SecurelIlIlili11I11i1IlllII = SecurelIliiiI1iII1l1lIiiliI end SecurelIlIlili11I11i1IlllII, SecurelIlil1ii1l1Il1I1111Ii = SecurelIlillllI1ili1lliliiI(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111](Secureili111ilill1lIIIiii(SecurelIlIIliilli1IlIll1lll, SecurelIil1iIi1i1il11l111 + 1, SecurelIlIlili11I11i1IlllII))) else SecurelIlIlili11I11i1IlllII, SecurelIlil1ii1l1Il1I1111Ii = SecurelIlillllI1ili1lliliiI(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111]()) end if SecurelIl1llIiilIII11i1li1I ~= 1 then if SecurelIl1llIiilIII11i1li1I ~= 0 then SecurelIlIlili11I11i1IlllII = SecurelIil1iIi1i1il11l111 + SecurelIl1llIiilIII11i1li1I - 2 else SecurelIlIlili11I11i1IlllII = SecurelIlIlili11I11i1IlllII + SecurelIil1iIi1i1il11l111 end SecureIIIllIll1II1lIllli1 = 0 for SecureIIiliI1liiIllIlll11 = SecurelIil1iIi1i1il11l111, SecurelIlIlili11I11i1IlllII do SecureIIIllIll1II1lIllli1 = SecureIIIllIll1II1lIllli1 + 1 SecurelIlIIliilli1IlIll1lll[SecureIIiliI1liiIllIlll11] = SecurelIlil1ii1l1Il1I1111Ii[SecureIIIllIll1II1lIllli1] end end SecurelIliiiI1iII1l1lIiiliI = SecurelIlIlili11I11i1IlllII - 1 end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if SecurelIl1llIiilIII11i1li1I == 189 then return SecurelIli11Iilll1iIIi1111I[16]({ [123416] = (SecurelIil1iIi1i1il11l111 - 129) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 129) % 256, [124901] = 0 }) end for SecureIIiliI1liiIllIlll11 = SecurelIil1iIi1i1il11l111, #SecurelIlIIliilli1IlIll1lll do local SecureIilll1illII1l11Il11 = SecurelIll1liI11iIliil1Ii1i for SecureililIl11lil1i1i1li1, SecurellIIIl1I1lIliIiili1 in next, SecureI1iiIIiillII111Iiii, nil do for SecurelIli1l1liIl1iIiiIii1I, SecureIl1IiiiIliIii1II1Ii in next, SecurellIIIl1I1lIliIiili1, nil do if SecurelIlIIliilli1IlIll1lll == SecureIl1IiiiIliIii1II1Ii[1] and SecureIl1IiiiIliIii1II1Ii[2] == SecureIIiliI1liiIllIlll11 then if not SecurelIlIlIl1lIiII1lIlIilI[SecureIilll1illII1l11Il11] then SecurelIlIlIl1lIiII1lIlIilI[SecureIilll1illII1l11Il11] = SecurelIlIIliilli1IlIll1lll[SecureIIiliI1liiIllIlll11] SecurelIll1liI11iIliil1Ii1i = SecurelIll1liI11iIliil1Ii1i + 1 end SecurellIIIl1I1lIliIiili1[SecurelIli1l1liIl1iIiiIii1I] = {SecurelIlIlIl1lIiII1lIlIilI, SecureIilll1illII1l11Il11} end end end end end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if SecurelIl1llIiilIII11i1li1I == 159 then return SecurelIli11Iilll1iIIi1111I[1]({ [123416] = (SecurelIil1iIi1i1il11l111 - 198) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 198) % 256, [124901] = 0 }) end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = not SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll, SecureIiiIII1I11IIIIliIil) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if Securel1ll1I1iI11I11Illl1 == 227 then return SecurelIli11Iilll1iIIi1111I[27]({ [123416] = (SecurelIil1iIi1i1il11l111 - 200) % 256, [7942] = (SecurelIl1llIiilIII11i1li1I - 200) % 256, [124901] = 0 }) end local SecureiliI11l1li1Ii11i1lI = SecurelIil1iIi1i1il11l111 + 2 local SecurelIll1iI11ilIlII1i1li1 = { SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111](SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 1], SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 2]) } for SecureIIiliI1liiIllIlll11 = 1, SecurelIl1llIiilIII11i1li1I do SecurelIlIIliilli1IlIll1lll[SecureiliI11l1li1Ii11i1lI + SecureIIiliI1liiIllIlll11] = SecurelIll1iI11ilIlII1i1li1[SecureIIiliI1liiIllIlll11] end if SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 3] ~= nil then SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 2] = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 3] else SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 / SecurelIl1llIiilIII11i1li1I end, nil, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 + SecurelIl1llIiilIII11i1li1I end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 ^ SecurelIl1llIiilIII11i1li1I end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureiiIl1l1lli1III1llIi = SecureIIiIiIiIili1iili1II[SecureIIli1ill11IlIliIlIl] local SecurelIil1llI1Ill1il1lIl = {} if SecureiiIl1l1lli1III1llIi[SecurelIlI11IIIl1iIi1Iiiill] > 0 then do local SecurelllilillIiiIillIl1l = {} SecurelIil1llI1Ill1il1lIl = SecureiiilI11iiliI111II11({}, { __index = function(SecureIliIlIi1illlIIIllII, Securei1l1IlI1IiliilI1Ill) local SecureIl1IiiiIliIii1II1Ii = SecurelllilillIiiIillIl1l[Securei1l1IlI1IiliilI1Ill] return SecureIl1IiiiIliIii1II1Ii[1][SecureIl1IiiiIliIii1II1Ii[2]] end, __newindex = function(SecureIliIlIi1illlIIIllII, Securei1l1IlI1IiliilI1Ill, Secureil1IIlliIIl11IIilI1) local SecureIl1IiiiIliIii1II1Ii = SecurelllilillIiiIillIl1l[Securei1l1IlI1IiliilI1Ill] SecureIl1IiiiIliIii1II1Ii[1][SecureIl1IiiiIliIii1II1Ii[2]] = Secureil1IIlliIIl11IIilI1 end }) for SecureIIiliI1liiIllIlll11 = 1, SecureiiIl1l1lli1III1llIi[SecurelIlI11IIIl1iIi1Iiiill] do local SecureII111llI1l1l11Illi1 = SecurelililiIillli1III1Il[SecureIliI1IllIIIllIlIIIi] if SecureII111llI1l1l11Illi1[SecurelIliIl1i1iiIiliIl1IIl] == SecureIi11iiiiiil1i1I11iI then SecurelllilillIiiIillIl1l[SecureIIiliI1liiIllIlll11 - 1] = { SecurelIlIIliilli1IlIll1lll, SecureII111llI1l1l11Illi1[SecureI1III1lil1i1llIi1i1] } elseif SecureII111llI1l1l11Illi1[SecurelIliIl1i1iiIiliIl1IIl] == SecureI1i1IIli1IlIiIliliI then SecurelllilillIiiIillIl1l[SecureIIiliI1liiIllIlll11 - 1] = { Securelli1lii1iIIIIIIIi11, SecureII111llI1l1l11Illi1[SecureI1III1lil1i1llIi1i1] } end SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end SecureI1iiIIiillII111Iiii[#SecureI1iiIIiillII111Iiii + 1] = SecurelllilillIiiIillIl1l end end local SecureIlI1II1ilIIliiiiI11 = SecureiII1li1ilillliiIIlI(SecureiiIl1l1lli1III1llIi, SecureI1llli1lIlIllIiliIi, SecurelIil1llI1Ill1il1lIl) SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecureIlI1II1ilIIliiiiI11 end, function(SecurelIlillili1I11iIililI1) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if not not SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] == (SecurelIl1llIiilIII11i1li1I == 0) then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end end, nil, nil, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIli1l1liIl1iIiiIii1I if SecureIIli1ill11IlIliIlIl == 100000 then SecurelIli1l1liIl1iIiiIii1I = SecurelIlIIliilli1IlIll1lll[251] else SecurelIli1l1liIl1iIiiIii1I = SecurelIll1IIli1Ii1llIii1ii[SecureIIli1ill11IlIliIlIl][SecurelIlIIIllIIllI1Il1l1ii] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecureI1llli1lIlIllIiliIi[SecurelIli1l1liIl1iIiiIii1I] end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end if Securel1ll1I1iI11I11Illl1 <= SecurelIl1llIiilIII11i1li1I ~= (SecurelIil1iIi1i1il11l111 ~= 0) then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] if SecurelIl1llIiilIII11i1li1I == 248 then return SecurelIli11Iilll1iIIi1111I[17]({ [123416] = (SecurelIil1iIi1i1il11l111 - 109) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 109) % 256, [124901] = 0 }) end if SecurelIl1llIiilIII11i1li1I == 216 then return SecurelIli11Iilll1iIIi1111I[25]({ [123416] = (SecurelIil1iIi1i1il11l111 - 26) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 26) % 256, [124901] = 0 }) end if Securel1ll1I1iI11I11Illl1 == 1 then return true end local SecurelIlIlili11I11i1IlllII = SecurelIil1iIi1i1il11l111 + Securel1ll1I1iI11I11Illl1 - 2 if Securel1ll1I1iI11I11Illl1 == 0 then SecurelIlIlili11I11i1IlllII = SecurelIliiiI1iII1l1lIiiliI end return true, SecurelIil1iIi1i1il11l111, SecurelIlIlili11I11i1IlllII end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + SecureIIIilillIIIllll1lii end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIll1iI11ilIlII1i1li1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] for SecureIIiliI1liiIllIlll11 = Securel1ll1I1iI11I11Illl1 + 1, SecurelIl1llIiilIII11i1li1I do SecurelIll1iI11ilIlII1i1li1 = SecurelIll1iI11ilIlII1i1li1 .. SecurelIlIIliilli1IlIll1lll[SecureIIiliI1liiIllIlll11] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIll1iI11ilIlII1i1li1 end, function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = { Secureili111ilill1lIIIiii(SecurelIII11liI1iiii1iiII, 1, Securel1ll1I1iI11I11Illl1 == 0 and 895 or Securel1ll1I1iI11I11Illl1) } end } Securel1IilI1l1iIlIlll1il[7] = function(SecurelIlillili1I11iIililI1) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1 - SecurelIl1llIiilIII11i1li1I end Securel1IilI1l1iIlIlll1il[25] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll, SecureIiiIII1I11IIIIliIil) local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end if Securel1ll1I1iI11I11Illl1 == SecurelIl1llIiilIII11i1li1I ~= (SecurelIil1iIi1i1il11l111 ~= 0) then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end end Securel1IilI1l1iIlIlll1il[5] = function(SecurelIlillili1I11iIililI1) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIli1l1liIl1iIiiIii1I if SecureIIli1ill11IlIliIlIl == 100000 then SecurelIli1l1liIl1iIiiIii1I = SecurelIlIIliilli1IlIll1lll[251] else SecurelIli1l1liIl1iIiiIii1I = SecurelIll1IIli1Ii1llIii1ii[SecureIIli1ill11IlIliIlIl][SecurelIlIIIllIIllI1Il1l1ii] end SecureI1llli1lIlIllIiliIi[SecurelIli1l1liIl1iIiiIii1I] = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] end Securel1IilI1l1iIlIlll1il[3] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIllIil11ill1iIiIliIi(SecurelIlIlIIiIiIlli111lI1I(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111]), "`for` initial value must be a number") SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 1] = SecurelIllIil11ill1iIiIliIi(SecurelIlIlIIiIiIlli111lI1I(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 1]), "`for` limit value must be a number") SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 2] = SecurelIllIil11ill1iIiIliIi(SecurelIlIlIIiIiIlli111lI1I(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 2]), "`for` step value must be a number") SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] - SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 2] SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + SecureIIIilillIIIllll1lii end Securel1IilI1l1iIlIlll1il[14] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end if Securel1ll1I1iI11I11Illl1 < SecurelIl1llIiilIII11i1li1I ~= (SecurelIil1iIi1i1il11l111 ~= 0) then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 end end Securel1IilI1l1iIlIlll1il[16] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIlIlIIilliIi1lI1111i = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 2] local Securel1iiI1Il1ilIl111il1 = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] + SecurelIlIlIIilliIi1lI1111i SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1iiI1Il1ilIl111il1 if SecurelIlIlIIilliIi1lI1111i > 0 then if Securel1iiI1Il1ilIl111il1 <= SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 1] then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + SecureIIIilillIIIllll1lii SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 3] = Securel1iiI1Il1ilIl111il1 end elseif Securel1iiI1Il1ilIl111il1 >= SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 1] then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + SecureIIIilillIIIllll1lii SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 3] = Securel1iiI1Il1ilIl111il1 end end Securel1IilI1l1iIlIlll1il[18] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = #SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end Securel1IilI1l1iIlIlll1il[0] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll, SecureIiiIII1I11IIIIliIil) local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] if SecurelIl1llIiilIII11i1li1I == 186 then return SecurelIli11Iilll1iIIi1111I[28]({ [123416] = (SecurelIil1iIi1i1il11l111 - 127) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 127) % 256, [124901] = 0 }) end for SecureIIiliI1liiIllIlll11 = SecurelIil1iIi1i1il11l111, Securel1ll1I1iI11I11Illl1 do SecurelIlIIliilli1IlIll1lll[SecureIIiliI1liiIllIlll11] = nil end end Securel1IilI1l1iIlIlll1il[9] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] if not not SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] == (SecurelIl1llIiilIII11i1li1I == 0) then SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 else SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end end Securel1IilI1l1iIlIlll1il[15] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureiliI11l1li1Ii11i1lI = (SecurelIl1llIiilIII11i1li1I - 1) * 50 if Securel1ll1I1iI11I11Illl1 == 0 then Securel1ll1I1iI11I11Illl1 = SecurelIliiiI1iII1l1lIiiliI - SecurelIil1iIi1i1il11l111 end for SecureIIiliI1liiIllIlll11 = 1, Securel1ll1I1iI11I11Illl1 do SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111][SecureiliI11l1li1Ii11i1lI + SecureIIiliI1liiIllIlll11] = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + SecureIIiliI1liiIllIlll11] end end Securel1IilI1l1iIlIlll1il[1] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli if SecurelIl1llIiilIII11i1li1I == 94 then return SecurelIli11Iilll1iIIi1111I[24]({ [123416] = (SecurelIil1iIi1i1il11l111 - 125) % 256, [7942] = (Securel1ll1I1iI11I11Illl1 - 125) % 256, [124901] = 0 }) end if SecurelIl1llIiilIII11i1li1I == 64 then return SecurelIli11Iilll1iIIi1111I[30]({ [123416] = (SecurelIil1iIi1i1il11l111 - 122) % 256, [98084] = (Securel1ll1I1iI11I11Illl1 - 122) % 256, [124901] = 0 }) end local Secureli1iii1llIIiIl1I1Il = Securel1ll1I1iI11I11Illl1 > 0 and Securel1ll1I1iI11I11Illl1 - 1 or Secureli1liI11llIII1iIi1i - SecureilIl1I11III111IIiIi if Secureli1iii1llIIiIl1I1Il < 0 then Secureli1iii1llIIiIl1I1Il = -1 end for SecureIIiliI1liiIllIlll11 = SecurelIil1iIi1i1il11l111, SecurelIil1iIi1i1il11l111 + Secureli1iii1llIIiIl1I1Il do SecurelIlIIliilli1IlIll1lll[SecureIIiliI1liiIllIlll11] = Securei1IiilIIll1111IIi1i[SecureilIl1I11III111IIiIi + (SecureIIiliI1liiIllIlll11 - SecurelIil1iIi1i1il11l111) + 1] end SecurelIliiiI1iII1l1lIiiliI = SecurelIil1iIi1i1il11l111 + Secureli1iii1llIIiIl1I1Il end Securel1IilI1l1iIlIlll1il[30] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIlil1ii1l1Il1I1111Ii, SecurelIlIlili11I11i1IlllII if Securel1ll1I1iI11I11Illl1 ~= 1 then if Securel1ll1I1iI11I11Illl1 ~= 0 then SecurelIlIlili11I11i1IlllII = SecurelIil1iIi1i1il11l111 + Securel1ll1I1iI11I11Illl1 - 1 else SecurelIlIlili11I11i1IlllII = SecurelIliiiI1iII1l1lIiiliI end SecurelIlIlili11I11i1IlllII, SecurelIlil1ii1l1Il1I1111Ii = SecurelIlillllI1ili1lliliiI(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111](Secureili111ilill1lIIIiii(SecurelIlIIliilli1IlIll1lll, SecurelIil1iIi1i1il11l111 + 1, SecurelIlIlili11I11i1IlllII))) else SecurelIlIlili11I11i1IlllII, SecurelIlil1ii1l1Il1I1111Ii = SecurelIlillllI1ili1lliliiI(SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111]()) end SecurelIlIIliilli1IlIll1lll = SecurelIlil1ii1l1Il1I1111Ii return true, 1, SecurelIlIlili11I11i1IlllII end Securel1IilI1l1iIlIlll1il[17] = function(SecurelIlillili1I11iIililI1) local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] if Securel1ll1I1iI11I11Illl1 > 255 then Securel1ll1I1iI11I11Illl1 = SecurelIll1IIli1Ii1llIii1ii[Securel1ll1I1iI11I11Illl1 - 256][SecurelIlIIIllIIllI1Il1l1ii] else Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] end if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111][Securel1ll1I1iI11I11Illl1] = SecurelIl1llIiilIII11i1li1I end Securel1IilI1l1iIlIlll1il[31] = function(SecurelIlillili1I11iIililI1, SecureI11li1llli1l11ilIIi, SecureIl1l11iIi11IlIII1ll) local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] Securel1ll1I1iI11I11Illl1 = SecurelIlIIliilli1IlIll1lll[Securel1ll1I1iI11I11Illl1] if SecurelIl1llIiilIII11i1li1I > 255 then SecurelIl1llIiilIII11i1li1I = SecurelIll1IIli1Ii1llIii1ii[SecurelIl1llIiilIII11i1li1I - 256][SecurelIlIIIllIIllI1Il1l1ii] else SecurelIl1llIiilIII11i1li1I = SecurelIlIIliilli1IlIll1lll[SecurelIl1llIiilIII11i1li1I] end SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111 + 1] = Securel1ll1I1iI11I11Illl1 SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] = Securel1ll1I1iI11I11Illl1[SecurelIl1llIiilIII11i1li1I] end Securel1IilI1l1iIlIlll1il[4] = function(SecurelIlillili1I11iIililI1) local SecurelIl1llIiilIII11i1li1I = SecurelIlillili1I11iIililI1[98084] local SecureIIIilillIIIllll1lii = SecurelIlillili1I11iIililI1[124901] - SecurelIliliIiilIl1llllli local SecureIIli1ill11IlIliIlIl = SecurelIlillili1I11iIililI1[124901] local Securel1ll1I1iI11I11Illl1 = SecurelIlillili1I11iIililI1[7942] local SecurelIil1iIi1i1il11l111 = SecurelIlillili1I11iIililI1[123416] Securelli1lii1iIIIIIIIi11[Securel1ll1I1iI11I11Illl1] = SecurelIlIIliilli1IlIll1lll[SecurelIil1iIi1i1il11l111] end SecurelIli11Iilll1iIIi1111I = { Securel1IilI1l1iIlIlll1il[1], Securel1IilI1l1iIlIlll1il[10], Securel1IilI1l1iIlIlll1il[15], Securel1IilI1l1iIlIlll1il[14], Securel1IilI1l1iIlIlll1il[30], Securel1IilI1l1iIlIlll1il[8], Securel1IilI1l1iIlIlll1il[0], Securel1IilI1l1iIlIlll1il[35], Securel1IilI1l1iIlIlll1il[7], Securel1IilI1l1iIlIlll1il[12], Securel1IilI1l1iIlIlll1il[20], Securel1IilI1l1iIlIlll1il[22], Securel1IilI1l1iIlIlll1il[27], Securel1IilI1l1iIlIlll1il[36], Securel1IilI1l1iIlIlll1il[6], Securel1IilI1l1iIlIlll1il[4], Securel1IilI1l1iIlIlll1il[13], Securel1IilI1l1iIlIlll1il[17], Securel1IilI1l1iIlIlll1il[26], Securel1IilI1l1iIlIlll1il[33], Securel1IilI1l1iIlIlll1il[32], Securel1IilI1l1iIlIlll1il[37], Securel1IilI1l1iIlIlll1il[24], Securel1IilI1l1iIlIlll1il[2], Securel1IilI1l1iIlIlll1il[18], Securel1IilI1l1iIlIlll1il[5], Securel1IilI1l1iIlIlll1il[21], Securel1IilI1l1iIlIlll1il[34], Securel1IilI1l1iIlIlll1il[19], Securel1IilI1l1iIlIlll1il[29], Securel1IilI1l1iIlIlll1il[16], Securel1IilI1l1iIlIlll1il[23], Securel1IilI1l1iIlIlll1il[3], Securel1IilI1l1iIlIlll1il[11], Securel1IilI1l1iIlIlll1il[28], Securel1IilI1l1iIlIlll1il[31], Securel1IilI1l1iIlIlll1il[9], Securel1IilI1l1iIlIlll1il[25] } local function SecureIIIllIll1II1lIllli1() while true do local SecurelIlillili1I11iIililI1 = SecurelililiIillli1III1Il[SecureIliI1IllIIIllIlIIIi] SecureIliI1IllIIIllIlIIIi = SecureIliI1IllIIIllIlIIIi + 1 local SecurelIlIIlIIIliiIlII11Iii, SecureliiIilii11IIIIiIII1, SecurelIIl1liii11i1ilIIIl = SecurelIli11Iilll1iIIi1111I[SecurelIlillili1I11iIililI1[32690] + 1](SecurelIlillili1I11iIililI1) if SecurelIlIIlIIIliiIlII11Iii then return SecureliiIilii11IIIIiIII1, SecurelIIl1liii11i1ilIIIl end end end local Secureiiiii1IIli1lllII11i, SecureliiIilii11IIIIiIII1, SecurelIIl1liii11i1ilIIIl = Securelll1lllllIIi1l1Iil1(SecureIIIllIll1II1lIllli1) if Secureiiiii1IIli1lllII11i then if SecureliiIilii11IIIIiIII1 then return Secureili111ilill1lIIIiii(SecurelIlIIliilli1IlIll1lll, SecureliiIilii11IIIIiIII1, SecurelIIl1liii11i1ilIIIl) end else local SecureIl1IIl1liliIil1iIiI = SecurelIl1IlilI1lI1I1I1liIl("Luraph Script:" .. (SecurelliI1ii11l111Il1li1[SecureIliI1IllIIIllIlIIIi - 1] or "") .. ": " .. Securei1ll11lI1IIiiIllill(SecureliiIilii11IIIIiIII1), "[^:]+:%d*: ", function(Securel1iliI1IIl11lI1Ii1l) if not SecureiIIlIl1Il1I1II1lIlI(Securel1iliI1IIl11lI1Ii1l, "Luraph Script:%d") then return "" end end) SecureIilIlI111il1ll1llIl(SecureIl1IIl1liliIil1iIiI, 0) end end SecureIl1i1i11I1i11lIIlii(SecurelIl1I1i1lIlIlil1ll1II, SecureI1llli1lIlIllIiliIi) return SecurelIl1I1i1lIlIlil1ll1II end local SecureIIiiiIl1l11i1lI1llI = Securei1i111Iilii1l1lI1l1() return SecureiII1li1ilillliiIIlI(SecureIIiiiIl1l11i1lI1llI, SecureI1llli1lIlIllIiliIi)() end return SecureiI11I1i1iIi1lI1lilI("LPH|ecurelilIllll1I11llIiiIl())
